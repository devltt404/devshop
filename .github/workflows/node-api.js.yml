name: Node.js CI/CD API server

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/node-api.js.yml
      - server/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/node-api.js.yml
      - server/**
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]

    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: "server"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "server/package-lock.json"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Create .env file
        run: |
          cat <<EOF > .env.production
          NODE_ENV=production
          SERVER_PORT=${{ vars.SERVER_PORT }}
          API_BASE_PATH=${{ vars.API_BASE_PATH }}
          CLIENT_BASE_URL=${{ vars.CLIENT_BASE_URL }}

          JWT_SECRET=${{ secrets.JWT_SECRET }}
          DATABSE_URL=${{ secrets.DATABSE_URL }}
          STRIPE_PK=${{ secrets.STRIPE_PK }}
          STRIPE_SK=${{ secrets.STRIPE_SK }}
          CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          EOF

      - name: Build
        run: npm run build --if-present

      - name: Restart API server
        run: pm2 restart devshop-api --update-env || pm2 start npm --name "devshop-api" -- run server-production
